{"ast":null,"code":"var _jsxFileName = \"/Users/choi/Desktop/\\u1109\\u1173\\u1111\\u1161\\u11A8\\u1109\\u1173/Newbie/Developer/Code/21spring-developer-seminar/21spring-frontend-seminar/src/components/DogFetch.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DogFetch = () => {\n  _s();\n\n  const [imageURL, setImageURL] = useState('');\n  useEffect(() => {\n    fetch('http://localhost:3000/dog-fetch/').then(data => data.json()).then(result => {\n      setImageURL(result);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: imageURL !== \"\" && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imageURL,\n      alt: \"Dog\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 27\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DogFetch, \"6fsRnKFN53Sg4AhR/GB90qNzE9o=\");\n\n_c = DogFetch;\nexport default DogFetch;\n\nvar _c;\n\n$RefreshReg$(_c, \"DogFetch\");","map":{"version":3,"sources":["/Users/choi/Desktop/스팍스/Newbie/Developer/Code/21spring-developer-seminar/21spring-frontend-seminar/src/components/DogFetch.js"],"names":["React","useState","useEffect","DogFetch","imageURL","setImageURL","fetch","then","data","json","result"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,EAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,KAAK,CAAC,kCAAD,CAAL,CACGC,IADH,CACQC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADhB,EAEGF,IAFH,CAEQG,MAAM,IAAI;AACdL,MAAAA,WAAW,CAACK,MAAD,CAAX;AACD,KAJH;AAKD,GANQ,EAMN,EANM,CAAT;AAQA,sBACE;AAAA,cACGN,QAAQ,KAAK,EAAb,iBAAmB;AAAK,MAAA,GAAG,EAAEA,QAAV;AAAoB,MAAA,GAAG,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA;AADtB;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAhBD;;GAAMD,Q;;KAAAA,Q;AAkBN,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst DogFetch = () => {\n  const [imageURL, setImageURL] = useState('');\n\n  useEffect(() => {\n    fetch('http://localhost:3000/dog-fetch/')\n      .then(data => data.json())\n      .then(result => {\n        setImageURL(result)\n      });\n  }, [])\n\n  return (\n    <div>\n      {imageURL !== \"\" && <img src={imageURL} alt=\"Dog\" />}\n    </div>\n  )\n}\n\nexport default DogFetch;\n"]},"metadata":{},"sourceType":"module"}